# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build & Test

on:
  push:
    paths:
      - ".github/workflows/build.yml"
      - ".github/workflows/docker.yml"
      - "src/**"
      - "schemas/**"
      - "docker/**"
      - "ci/**"

  pull_request:
    paths:
      - ".github/workflows/build.yml"
      - ".github/workflows/docker.yml"
      - "src/**"
      - "schemas/**"
      - "docker/**"
      - "ci/**"

env:
  dotnetVersion: "7.0.x"

jobs:
  build:
    name: Build Non-MUSL
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        arch: [x64, arm64]
        include:
          - os: ubuntu-latest
            arch: arm
    # Must run on Windows so that version info gets properly set in host EXE. See:
    # https://github.com/dotnet/runtime/issues/3828
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # avoid shallow clone for GitVersion

      - name: Setup .NET Core SDK ${{ env.dotnetVersion }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnetVersion }}

      - name: Calculate Runtime ID
        id: calc
        shell: pwsh
        run: |
          $rid = ./ci/GetRuntimeId.ps1 "${{ matrix.arch }}"
          echo "rid=$rid" >> $env:GITHUB_OUTPUT

      - name: Test
        if: matrix.arch == 'x64'
        run: dotnet test src -c Release --logger GitHubActions

      - name: Publish
        shell: pwsh
        run: ci/Publish.ps1 -Runtime ${{ steps.calc.outputs.rid }}

      - name: Smoke
        if: matrix.arch == 'x64'
        shell: pwsh
        run: ci/SmokeTest.ps1 publish/${{ steps.calc.outputs.rid }}/recyclarr

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: recyclarr-${{ steps.calc.outputs.rid }}
          path: publish/${{ steps.calc.outputs.rid }}/*

  # NOTE: This is duplicated from the 'build' job. Sadly, reusable workflows cannot be invoked from
  # matrix jobs. See here:
  # https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
  musl:
    name: Build MUSL
    strategy:
      fail-fast: true
      matrix:
        runtime:
          - linux-musl-x64
          - linux-musl-arm
          - linux-musl-arm64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # avoid shallow clone for GitVersion

      - name: Setup .NET Core SDK ${{ env.dotnetVersion }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnetVersion }}

      - name: Publish
        shell: pwsh
        run: ci/Publish.ps1 -Runtime ${{ matrix.runtime }} -NoSingleFile

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: recyclarr-${{ matrix.runtime }}
          path: publish/${{ matrix.runtime }}/*

  release:
    name: Release
    needs: [build, musl]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # avoid shallow clone for GitVersion
          # token: ${{ secrets.GITHUB_TOKEN }} # Allows git push

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: 5.x

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        id: gitversion

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: publish

      - name: Create Zip Files
        shell: pwsh
        run: ci/CreateZip.ps1 publish

      - name: Extract Changelog
        id: changelog
        uses: ffurrer2/extract-release-notes@v1

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_PAT }}
        with:
          files: publish-zip/recyclarr-*.zip
          body: ${{ steps.changelog.outputs.release_notes }}
          tag_name: ${{ github.event.create.ref }}
          draft: false
          prerelease: ${{ steps.gitversion.outputs.preReleaseTag != '' }}

  docker:
    name: Docker
    needs: [build, musl]
    uses: ./.github/workflows/docker.yml
    secrets: inherit

  # The main purpose of this job is to group all the other jobs together into one single job status
  # that can be set as a requirement to merge pull requests. This is easier than enumerating all
  # jobs in a workflow to ensure they all pass.
  check:
    if: always()
    name: Report Build Status
    needs: [build, musl]
    runs-on: ubuntu-latest
    steps:
      - name: Check if all jobs succeeded
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
